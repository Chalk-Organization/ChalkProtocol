var searchIndex = JSON.parse('{\
"chalk_protocol":{"doc":"","t":[0,13,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["tcp","FailedToWriteListeners","FailedToWriteStreams","TcpClient","TcpClientError","UnboundListener","UnboundStream","bind_to","borrow","borrow","borrow_mut","borrow_mut","connect_to","fmt","fmt","from","from","into","into","new","read","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write"],"q":["chalk_protocol","chalk_protocol::tcp","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An async wrapper for <code>TcpStream</code> and <code>TcpListener</code>","","","Async Tcp Client","Errors for TcpClient","","","Creates a <code>TcpListener</code>.","","","","","Creates a <code>TcpStream</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>TcpClient</code>","Reads from a Client to get any sent data.","","","","","","","","Sends data to a bound listener."],"i":[0,1,1,0,0,1,1,2,2,1,2,1,2,1,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2],"f":[null,null,null,null,null,null,null,[[["tcpclient",3],["tosocketaddrs",8]],["future",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tcpclient",3],["tosocketaddrs",8]],["future",8]],[[["tcpclienterror",4],["formatter",3]],["result",6]],[[["tcpclienterror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["tcpclient",3]],[[["tcpclient",3]],["future",8]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["tcpclient",3]],["future",8]]],"p":[[4,"TcpClientError"],[3,"TcpClient"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
